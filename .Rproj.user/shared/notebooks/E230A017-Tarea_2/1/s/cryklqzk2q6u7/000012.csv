"0",""
"0","###########"
"0","# GET DATA#"
"0","###########"
"0","path <-  ""segurosalud.csv"""
"0","raw_data <- read.csv(path, header = TRUE, row.names = NULL, sep = "";"")"
"0",""
"0","#################"
"0","# DATA WRANGLING#"
"0","#################"
"0","######"
"0","#ROWS#"
"0","######"
"0","# CHECK DUPLICATED DATA: no duplicated data to delete."
"0","# CHECK NA's: NAs to work with."
"0",""
"0","##############"
"0","# WRANGLING 1#"
"0","##############"
"0","# #   INTERINPSP     140 NAs out of 21395 observations."
"0","# percentage_Nas = 140 / length(raw_data$ANOENC) * 100"
"0","# percentage_Nas"
"0","# "
"0","# # As the number of NAs is under 1% of our number of observations in the sample. We can perfectly delete the rows of our dataframe that contain any NA."
"0","# raw_data = na.omit(raw_data)"
"0","# "
"0","# try <- raw_data"
"0","# try<-try[!( try$NUMOCUP < 0 | try$TIPHOGAR3 < 0 | try$INTERINPSP < 0 | try$SUPERF < 0 | try$INTERIN < 0),]"
"0","# "
"0","# percentage_Nas = (length(raw_data$ANOENC) - length(try$ANOENC)) / length(raw_data$ANOENC) * 100"
"0","# percentage_Nas"
"0","# "
"0","# # We are going to delete 6.4% of the observations in our sample due to the people not answering some of the questions (-9 value)."
"0",""
"0","##############"
"0","# WRANGLING 2#"
"0","##############"
"0","Mode <- function(x) {"
"0","  ux <- unique(x)"
"0","  ux[which.max(tabulate(match(x, ux)))]"
"0","}"
"0",""
"0","df_wrangling <- raw_data"
"0","df_wrangling$INTERINPSP[is.na(df_wrangling$INTERINPSP)] <- Mode(df_wrangling$INTERINPSP)"
"0","df_wrangling$INTERINPSP[df_wrangling$INTERINPSP == -9 ] <- Mode(df_wrangling$INTERINPSP)"
"0",""
"0","df_wrangling$NUMOCUP[df_wrangling$NUMOCUP == -9 ] <- Mode(df_wrangling$NUMOCUP)"
"0","df_wrangling$TIPHOGAR3[df_wrangling$TIPHOGAR3 == -9 ] <- Mode(df_wrangling$TIPHOGAR3)"
"0","df_wrangling$SUPERF[df_wrangling$SUPERF == -9 ] <- mean(df_wrangling$SUPERF)"
"0",""
"0",""
"0","#SCALING OF DICOTOMIC VARIABLES (1 or 0)"
"0","df_wrangling$SEXOSP[df_wrangling$SEXOSP == unique(df_wrangling$SEXOSP)[2]] <- 0"
"0","df_wrangling$OCUSP[df_wrangling$OCUSP == unique(df_wrangling$OCUSP)[2]] <- 0"
"0",""
"0",""
"0","#########"
"0","#COLUMNS#"
"0","#########"
"0","df_wrangling <- df_wrangling[, -c(1:2)] #Erase non-sense data"
"0",""
"0","# try[,-13] <- apply(try [, -13], 2, factor)"
"0",""
"0","df_wrangling$Seguro_salud <- factor(df_wrangling$Seguro_salud)"
"0","df <- df_wrangling"
"0",""
